<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="apsl.lib.EvaluateResourceCriticality" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
  <params>
    <param name="stationLogisticsData" comment="REQUIRED! Logistics data for the station"/>
    <param name="criticalityLevel" default="0.1f" comment="Optional! The criticality level (float, percentage of wares) for when a resource should be considered critical"/>
    <param name="buyOffers" default="null" comment="OPTIONAL! The list of buy offers of the current station. Will be created if not passed in"/>    
  </params>
  <attention min="unknown">
    <actions>
      <set_value name="$successResult" exact="false"/>
      
      <!--Parameter Validation-->
      <do_if value="$stationLogisticsData? == false or typeof $stationLogisticsTable != datatype.table">
        <debug_to_file name="'apsl.log'" text="'ERROR! apsl.lib.EvaluateResourceCriticality parameter stationLogisticsData either does not exist or was not a table!'"/>
        <return>
          <retval name="wasSuccessful" value="$successResult"/>
          <retval name="priorityResult" value="$result"/>
        </return>
      </do_if>
      <do_if value="$buyOffers != null and typeof $buyOffers != datatype.list">
        <debug_to_file name="'apsl.log'" text="'ERROR! apsl.lib.EvaluateResourceCriticality parameter buyOffers was passed in but was not a list!'"/>
        <return>
          <retval name="wasSuccessful" value="$operationSuccessful"/>
          <retval name="result" value="null"/>
        </return>
      </do_if>
      
      <!--Main Logic-->      
      <do_if value="$buyOffers == null">
        <find_buy_offer buyer="$seekingStation" excludeempty="false" multiple="true" result="$buyOffers"/>
      </do_if>
      
      <do_all exact="$buyOffers.count" counter="$offerCounter">
        <do_if value="$buyOffers.{$offerCounter}.ware.iscargo == true">
          
          <!--If it's not already tracked on resource data, track it.-->
          <do_if value="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}? == false">            
            <set_value name="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}" exact="table[]"/>
            <set_value name="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$isCritical" exact="false"/>
            <set_value name="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$totalReservations" exact="0"/>
          </do_if>
          
          <do_if value="$buyOffers.{$offerCounter}.stocklevel le $criticalityLevel">
            <set_value name="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$isCritical" exact="true"/>
            
            <!-- This ware is critical, make sure reservations for it are capped to 50% so the buy price will be high enough for some buy orders to come in-->
            <do_if value="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$totalReservations gt 0">
              <!--The goal is that if the amount of reservations is 50% or more of the target level, free up reservations down to 50%...-->
              <set_value name="$reservedRatio" exact="($stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.totalReservations)f / $stationLogisticsData.$station.cargo.{$buyOffers.{$offerCounter}}.target"/>

              <do_if value="$reservedRatio gt 0.5f">
                <!-- Figure out how many reservations to cancel. Should be current (ratio - 0.5) * reservation amount -->
                <set_value name="$reservationsToDrop" exact="((($reservedRatio - 0.5f) * $stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$totalReservations) + 1)i"/>

                <set_value name="$stationCounter" exact="$stationLogisticsData.$inRangeStations.$stationsWithInterestedWares.count"/>
                <do_while value="$reservationsToDrop gt 0">

                  <do_if value="$stationCounter le 0">
                    <!--This should be impossible if the logic is working right.-->
                    <debug_to_file name="apsl.log" text="ERROR! apsl.lib.EvaluateResourceCriticality counter for interested stations hit 0 before reserved amount of wares was reached! Should not be possible."/>
                    <break/>
                  </do_if>
                  
                  <!--Set this round's station and prep counter for next run.-->
                  <set_value name="$stationData" exact="$stationLogisticsData.$inRangeStations.{$stationCounter}"/>
                  <set_value name="$stationCounter" exact="1" operation="subtract"/>

                  <do_if value="$stationData.$interestedWares.{$buyOffers.{$offerCounter}.ware}? == true and $stationData.$interestedWares.{$buyOffers.{$offerCounter}.ware}.stationReservedAmount gt 0">
                    <!-- We have reservations at this station, drop up to reservationsToDrop limit-->
                    <do_if value="$stationData.$interestedWares.{$buyOffers.{$offerCounter}.ware}.$stationReservedAmount ge $reservationsToDrop">
                      <!--There's more wares on reserve at this station than there is left to drop, just drop the full amount left-->
                      <remove_ware_reservation object="$stationData.$station" reserver="$stationLogisticsData.$station" ware="$buyOffers.{$offerCounter}.ware" amount="$reservationsToDrop"/>
                      <set_value name="$stationData.$interestedWares.{$buyOffers.{$offerCounter}.ware}.$stationReservedAmount" exact="$reservationsToDrop" operation="subtract"/>
                      <set_value name="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$totalReservations" exact="$reservationsToDrop" operation="subtract"/>                      
                      <!--That was all necessary, break.-->
                      <break/>
                    </do_if>
                    <do_else>
                      <!--Ware is reserved, but not enough to clear out the remaining drop amount. Drop all the station has on reserve after removing that amount from resources-->                      
                      <set_value name="$stationLogisticsData.$resourceData.{$buyOffers.{$offerCounter}.ware}.$totalReservations" exact="$stationData.$interestedWares.{$buyOffers.{$offerCounter}.ware}.$stationReservedAmount" operation="subtract"/>
                      <set_value name="$stationData.$interestedWares.{$buyOffers.{$offerCounter}.ware}.$stationReservedAmount" exact="0" />
                      <remove_ware_reservation object="$stationData.$station" reserver="$stationLogisticsData.$station" ware="$buyOffers.{$offerCounter}.ware"/>                      
                    </do_else>
                  </do_if>                  
                </do_while>
              </do_if>              
            </do_if>            
          </do_if>                    
        </do_if>
      </do_all>

      <set_value name="$successResult" exact="true"/>

      <return>
        <retval name="wasSuccessful" value="$successResult"/>
      </return>
      
    </actions>
  </attention>
</aiscript>
