<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="apsl.lib.EvaluateResourceCriticality" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="1">
  <params>
    <param name="stationLogisticsData" comment="REQUIRED! Logistics data for the station"/>
    <param name="criticalityLevel" default="0.1f" comment="Optional! The criticality level (float, percentage of wares) for when a resource should be considered critical"/>
    <param name="buyOffers" default="null" comment="OPTIONAL! The list of buy offers of the current station. Will be created if not passed in"/>
  </params>
  <attention min="unknown">
    <actions>
      <set_value name="$debugChance" exact="0"/>
      <set_value name="$successResult" exact="false"/>

      <!--Parameter Validation-->
      <do_if value="$stationLogisticsData? == false or typeof $stationLogisticsData != datatype.table">
        <debug_to_file name="'apsl.station_eval.log'" text="'ERROR! apsl.lib.EvaluateResourceCriticality parameter stationLogisticsData either does not exist or was not a table!'"/>
        <return>
          <retval name="wasSuccessful" value="$successResult"/>
        </return>
      </do_if>
      <do_if value="$buyOffers != null and typeof $buyOffers != datatype.list">
        <debug_to_file name="'apsl.station_eval.log'" text="'ERROR! apsl.lib.EvaluateResourceCriticality parameter buyOffers was passed in but was not a list!'"/>
        <return>
          <retval name="wasSuccessful" value="$successResult"/>
        </return>
      </do_if>

      <do_if value="global.$apslData.$debug == true">
        <set_value name="$debugChance" exact="100"/>
      </do_if>

      <!--Main Logic-->
      <do_if value="$buyOffers == null">
        <find_buy_offer buyer="$seekingStation" excludeempty="false" multiple="true" result="$buyOffers"/>
      </do_if>

      <do_all exact="$buyOffers.count" counter="$offerCounter">
        <do_if value="$buyOffers.{$offerCounter}.ware.iscargo == true">

          <set_value name="$interestedWare" exact="$buyOffers.{$offerCounter}.ware"/>

          <!--If it's not already tracked on resource data, track it.-->
          <do_if value="$stationLogisticsData.$resourceData.{$interestedWare}? == false">
            <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 found untracked resourceData ware - %2'.[$stationLogisticsData.$station.name, $interestedWare.name]" chance="$debugChance"/>
            <set_value name="$stationLogisticsData.$resourceData.{$interestedWare}" exact="table[]"/>
            <set_value name="$stationLogisticsData.$resourceData.{$interestedWare}.$isCritical" exact="false"/>
            <set_value name="$stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations" exact="0"/>
          </do_if>


          <set_value name="$actualWareAmount" exact="$stationLogisticsData.$station.cargo.{$interestedWare}.count"/>
          <set_value name="$wareTargetAmount" exact="$stationLogisticsData.$station.cargo.{$interestedWare}.target"/>

          <!--Don't want to use stocklevel for this. Stocklevel doesn't check with only wares held. Criticality should be actual amount / target amount-->
          <do_if value="$wareTargetAmount == 0">
            <set_value name="$criticalityRatio" exact="1f"/>
            <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 ware  %2 Criticality calc - Edge Case, target amount is 0, setting criticality ratio to 1'.[$stationLogisticsData.$station.name, $interestedWare.name]" chance="$debugChance"/>
          </do_if>
          <do_elseif value="$actualWareAmount == 0">
            <set_value name="$criticalityRatio" exact="0f"/>
            <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 ware  %2 Criticality calc - actual amount is 0, setting criticality ratio to 0'.[$stationLogisticsData.$station.name, $interestedWare.name]" chance="$debugChance"/>
          </do_elseif>
          <do_else>
            <set_value name="$criticalityRatio" exact="($actualWareAmount)f / $wareTargetAmount"/>
            <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 ware  %2 Criticality calc - cargo amount(%3) / target amount (%4) = (%5)'.[$stationLogisticsData.$station.name, $interestedWare.name,$actualWareAmount,$wareTargetAmount,$criticalityRatio]" chance="$debugChance"/>
          </do_else>


          <do_if value="$criticalityRatio le $criticalityLevel">
            <set_value name="$stationLogisticsData.$resourceData.{$interestedWare}.$isCritical" exact="true"/>

            <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 ware is critical - %2'.[$stationLogisticsData.$station.name, $buyOffers.{$offerCounter}.ware.name]" chance="$debugChance"/>
            <!-- This ware is critical, make sure reservations for it are capped to 50% so the buy price will be high enough for some buy orders to come in-->
            <do_if value="$stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations gt 0">
              <!--The goal is that if the amount of reservations is 50% or more of the target level, free up reservations down to 50%...-->
              <!--Possible divide by zero, need to account for that.-->

              <do_if value="($stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations)f != 0f and $stationLogisticsData.$station.cargo.{$interestedWare}.target != 0">
                <set_value name="$reservedRatio" exact="($stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations)f / $stationLogisticsData.$station.cargo.{$interestedWare}.target"/>
              </do_if>
              <do_elseif value="($stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations)f != 0f">
                <!--0 things on reserve, reservedRatio is 0-->
                <set_value name="$reservedRatio" exact="0f"/>
              </do_elseif>
              <do_else>
                <!--Cargo target is 0...this is really unusual. Log it and set reservedRation to 100%-->
                <debug_to_file name="'apsl.station_eval.log'" text="'WARNING! apsl.lib.EvaluateResourceCriticality Station %1 has reservations for ware %2 but its target amount is 0...whaa?'.[$stationLogisticsData.$station.name,$buyOffers.{$offerCounter}.ware.name]"/>
                <set_value name="$reservedRatio" exact="1f"/>
              </do_else>

              <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 reserved ratio for ware - %2 - %3'.[$stationLogisticsData.$station.name, $interestedWare.name, $reservedRatio]" chance="$debugChance"/>

              <do_if value="$reservedRatio gt 0.5f">
                <!-- Figure out how many reservations to cancel. Should be current (ratio - 0.5) * reservation amount -->
                <set_value name="$reservationsToDrop" exact="((($reservedRatio - 0.5f) * $stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations) + 1)i"/>

                <debug_to_file name="'apsl.station_eval.log'" text="'INFO! apsl.Station.EvaluateResourceCriticality Station %1 dropping ware - %2 by %3'.[$stationLogisticsData.$station.name, $interestedWare.name, $reservationsToDrop]" chance="$debugChance"/>

                <set_value name="$stationCounter" exact="$stationLogisticsData.$stationsInRange.count"/>
                <do_while value="$reservationsToDrop gt 0">

                  <do_if value="$stationCounter le 0">
                    <!--This should be impossible if the logic is working right.-->
                    <debug_to_file name="'apsl.station_eval.log'" text="'ERROR! apsl.lib.EvaluateResourceCriticality counter for interested stations hit 0 before reserved amount of wares was reached! Should not be possible.'"/>
                    <break/>
                  </do_if>

                  <!--Set this round's station and prep counter for next run.-->
                  <set_value name="$stationData" exact="$stationLogisticsData.$stationsInRange.{$stationCounter}"/>
                  <set_value name="$stationCounter" exact="1" operation="subtract"/>

                  <do_if value="$stationData.$interestedWares.{$interestedWare}? == true and $stationData.$interestedWares.{$interestedWare}.stationReservedAmount gt 0">
                    <!-- We have reservations at this station, drop up to reservationsToDrop limit-->
                    <do_if value="$stationData.$interestedWares.{$interestedWare}.$stationReservedAmount ge $reservationsToDrop">
                      <!--There's more wares on reserve at this station than there is left to drop, just drop the full amount left-->
                      <remove_ware_reservation object="$stationData.$station" reserver="$stationLogisticsData.$station" ware="$interestedWare" amount="$reservationsToDrop"/>
                      <set_value name="$stationData.$interestedWares.{$interestedWare}.$stationReservedAmount" exact="$reservationsToDrop" operation="subtract"/>
                      <set_value name="$stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations" exact="$reservationsToDrop" operation="subtract"/>
                      <!--That was all necessary, break.-->
                      <break/>
                    </do_if>
                    <do_else>
                      <!--Ware is reserved, but not enough to clear out the remaining drop amount. Drop all the station has on reserve after removing that amount from resources-->
                      <set_value name="$stationLogisticsData.$resourceData.{$interestedWare}.$totalReservations" exact="$stationData.$interestedWares.{$interestedWare}.$stationReservedAmount" operation="subtract"/>
                      <set_value name="$stationData.$interestedWares.{$interestedWare}.$stationReservedAmount" exact="0" />
                      <remove_ware_reservation object="$stationData.$station" reserver="$stationLogisticsData.$station" ware="$interestedWare"/>
                    </do_else>
                  </do_if>
                </do_while>
              </do_if>
            </do_if>
          </do_if>
        </do_if>
      </do_all>

      <set_value name="$successResult" exact="true"/>

      <return>
        <retval name="wasSuccessful" value="$successResult"/>
      </return>

    </actions>
  </attention>
</aiscript>
